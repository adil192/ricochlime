name: Build for Linux

on:
  # Enable manual run
  workflow_dispatch:
  push:
    tags:
      - '**'

jobs:
  get-version:
    name: Get version
    runs-on: ubuntu-latest
    outputs:
      buildName: ${{ steps.get_version.outputs.buildName }}
      buildNumber: ${{ steps.get_version.outputs.buildNumber }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get version
        id: get_version
        run: |
          # get buildName from pubspec.yaml (before the +)
          buildName=$(grep -oP '(?<=version: ).*(?=\+)' pubspec.yaml)
          echo "buildName=$buildName" >> $GITHUB_OUTPUT

          # get buildNumber from pubspec.yaml (after the +)
          buildNumber=$(grep -oP '(?<=version: ).*' pubspec.yaml | grep -oP '(?<=\+).*$')
          echo "buildNumber=$buildNumber" >> $GITHUB_OUTPUT

  build-flutter-app-x86_64:
    name: Build Flutter app (x86_64)
    runs-on: ubuntu-latest
    needs: get-version

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install apt dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev cmake ninja-build libjsoncpp-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-good libunwind-dev
          version: 1.0
          execute_install_scripts: true

      - name: Setup cache
        uses: actions/cache/restore@v4
        with:
          path: |
            .dart_tool/
            build/
            .flutter-plugins
            .flutter-plugins-dependencies
            pubspec.lock
          key: ${{ runner.OS }}-ricochlime-ubuntu-${{ hashFiles('**/pubspec.lock') }}-${{ hashFiles('**/*.dart') }}
          restore-keys: |
            ${{ runner.OS }}-ricochlime-ubuntu-

      - name: Remove dev dependencies
        run: ./patches/remove_dev_dependencies.sh

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:'

      - run: flutter pub get

      - name: Build Linux (x86_64)
        run: |
          flutter build linux

          mkdir -p AppDir
          mv build/linux/x64/release/bundle/* AppDir/
          chmod +x AppDir/ricochlime

      - name: Compress Flutter build
        id: compress
        run: |
          archiveName="Ricochlime_v${{ needs.get-version.outputs.buildName }}_Linux_x86_64.tar.gz"
          echo "archiveName=$archiveName" >> $GITHUB_OUTPUT

          sudo chown -R $USER:$USER .

          install -Dm644 flatpak/com.adilhanney.ricochlime.metainfo.xml -t AppDir/share/metainfo/
          install -Dm644 flatpak/com.adilhanney.ricochlime.metainfo.xml -t AppDir/usr/share/metainfo/

          mkdir -p AppDir/usr/share/icons/hicolor/512x512/apps
          install -Dm644 assets/icon/resized/icon-512x512.png AppDir/share/icons/hicolor/512x512/apps/com.adilhanney.ricochlime.png
          install -Dm644 assets/icon/resized/icon-512x512.png AppDir/usr/share/icons/hicolor/512x512/apps/com.adilhanney.ricochlime.png

          install -Dm644 flatpak/com.adilhanney.ricochlime.desktop -t AppDir/share/applications/

          tar -C AppDir -cvf $archiveName .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Ricochlime-Archive-x86_64
          path: ${{ steps.compress.outputs.archiveName }}

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.compress.outputs.archiveName }}

  build-flutter-app-arm64:
    name: Build Flutter app (arm64)
    runs-on: ubuntu-latest
    needs: get-version

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: |
            .dart_tool/
            build/
            .flutter-plugins
            .flutter-plugins-dependencies
            pubspec.lock
          key: ${{ runner.OS }}-ricochlime-armlinux-${{ hashFiles('**/pubspec.lock') }}-${{ hashFiles('**/*.dart') }}
          restore-keys: |
            ${{ runner.OS }}-ricochlime-armlinux-

      # TODO(adil192): Use native arm64 runner
      - name: Build Linux (arm64)
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu_latest
          githubToken: ${{ github.token }}

          setup: |
            mkdir -p "${PWD}/AppDir"
          dockerRunArgs: |
            --volume "${PWD}/AppDir:/AppDir"

          install: |
            echo Installing dependencies
            apt-get update -qq -y
            apt-get install -qq -y \
              sudo \
              bash curl file git unzip xz-utils zip \
              clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev \
              libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-good

            echo Installing Flutter
            git clone https://github.com/flutter/flutter.git -b stable --depth 1 /opt/flutter
            /opt/flutter/bin/flutter doctor -v

          run: |
            echo Creating non-root user
            useradd -m nonroot
            chown -R nonroot /opt/flutter
            chown -R nonroot .

            echo Removing simulator dependency
            ./patches/remove_dev_dependencies.sh

            echo Building
            sudo -u nonroot /opt/flutter/bin/flutter build linux --target-platform linux-arm64
            mv build/linux/arm64/release/bundle/* /AppDir/
            chown -R nonroot /AppDir/
            chmod -R a+rw /AppDir/
            chmod +x /AppDir/ricochlime

      - name: Compress Flutter build
        id: compress
        run: |
          archiveName="Ricochlime_v${{ needs.get-version.outputs.buildName }}_Linux_arm64.tar.gz"
          echo "archiveName=$archiveName" >> $GITHUB_OUTPUT

          sudo chown -R $USER:$USER .

          install -Dm644 flatpak/com.adilhanney.ricochlime.metainfo.xml -t AppDir/share/metainfo/
          install -Dm644 flatpak/com.adilhanney.ricochlime.metainfo.xml -t AppDir/usr/share/metainfo/

          mkdir -p AppDir/usr/share/icons/hicolor/512x512/apps
          install -Dm644 assets/icon/resized/icon-512x512.png AppDir/share/icons/hicolor/512x512/apps/com.adilhanney.ricochlime.png
          install -Dm644 assets/icon/resized/icon-512x512.png AppDir/usr/share/icons/hicolor/512x512/apps/com.adilhanney.ricochlime.png

          install -Dm644 flatpak/com.adilhanney.ricochlime.desktop -t AppDir/share/applications/

          tar -C AppDir -cvf $archiveName .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Ricochlime-Archive-arm64
          path: ${{ steps.compress.outputs.archiveName }}

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.compress.outputs.archiveName }}

  build-appimage:
    name: Build AppImage
    needs: [build-flutter-app-x86_64, get-version]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install AppImage dependencies
        run: |
          sudo add-apt-repository universe
          sudo apt install libfuse2

      - name: Download app archive
        uses: actions/download-artifact@v4
        with:
          name: Ricochlime-Archive-x86_64

      - name: Rename app archive
        run: |
          mv Ricochlime_*.tar.gz Ricochlime-Linux-Portable.tar.gz

      - name: Download appimage-builder
        working-directory: appimage
        run: |
          wget -O appimage-builder-x86_64.AppImage https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage
          chmod +x appimage-builder-x86_64.AppImage

      - name: Prepare build files
        working-directory: appimage
        run: |
          mkdir AppDir
          tar -xvf ../Ricochlime-Linux-Portable.tar.gz -C AppDir
      
      - name: ls
        working-directory: appimage/AppDir
        run: |
          ls -la

      - name: Set AppImage version
        working-directory: appimage
        run: |
          # replace line with "version: latest" with "version: $buildName"
          sed -i "s/version: latest/version: ${{ needs.get-version.outputs.buildName }}/" AppImageBuilder.yml

      - name: Build AppImage
        working-directory: appimage
        run: |
          ./appimage-builder-x86_64.AppImage --skip-test

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: AppImage artifact
          path: appimage/Ricochlime-*-x86_64.AppImage*

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: appimage/Ricochlime-*-x86_64.AppImage*
          file_glob: true
